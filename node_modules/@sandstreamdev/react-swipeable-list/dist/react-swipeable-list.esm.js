import React, { useState, useEffect, PureComponent } from 'react';
import PropTypes from 'prop-types';

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var styles = {"swipeableList":"SwipeableList_swipeableList__3dl6y"};

var SwipeableList = function SwipeableList(_ref) {
  var children = _ref.children,
      scrollElement = _ref.scrollElement,
      threshold = _ref.threshold;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      blockSwipe = _useState2[0],
      setBlockSwipe = _useState2[1];

  useEffect(function () {
    window.addEventListener('mouseup', handleDragEnd);
    window.addEventListener('touchend', handleDragEnd);
    return function () {
      window.removeEventListener('mouseup', handleDragEnd);
      window.removeEventListener('touchend', handleDragEnd);
    };
  }, []);
  useEffect(function () {
    if (scrollElement) {
      scrollElement.addEventListener('scroll', handleScroll);
    }

    return function () {
      if (scrollElement) {
        scrollElement.removeEventListener('scroll', handleScroll);
      }
    };
  }, [scrollElement]);

  var handleDragStart = function handleDragStart() {
    return setBlockSwipe(false);
  };

  var handleDragEnd = function handleDragEnd() {
    return setBlockSwipe(false);
  };

  var handleScroll = function handleScroll() {
    return setBlockSwipe(true);
  };

  return React.createElement("div", {
    className: styles.swipeableList,
    onMouseDown: handleDragStart,
    onTouchStart: handleDragStart,
    onScroll: handleScroll,
    "data-testid": "list-wrapper"
  }, React.Children.map(children, function (child) {
    return React.cloneElement(child, {
      blockSwipe,
      threshold
    });
  }));
};

SwipeableList.propTypes = {
  children: PropTypes.node,
  scrollElement: typeof EventTarget !== 'undefined' ? PropTypes.instanceOf(EventTarget) : PropTypes.any,
  threshold: PropTypes.number
};

var styles$1 = {"swipeableListItem":"SwipeableListItem_swipeableListItem__3xnuO","contentRight":"SwipeableListItem_contentRight__Kox6B","contentLeft":"SwipeableListItem_contentLeft__3YoUt SwipeableListItem_contentRight__Kox6B","return":"SwipeableListItem_return__sR94A","contentLeftReturn":"SwipeableListItem_contentLeftReturn__1Ds5a SwipeableListItem_contentLeft__3YoUt SwipeableListItem_contentRight__Kox6B SwipeableListItem_return__sR94A","contentRightReturn":"SwipeableListItem_contentRightReturn__1YVPF SwipeableListItem_contentRight__Kox6B SwipeableListItem_return__sR94A","content":"SwipeableListItem_content__1k1mn","contentReturn":"SwipeableListItem_contentReturn__2_W7p SwipeableListItem_content__1k1mn"};

var SwipeActionPropType = PropTypes.shape({
  action: PropTypes.func.isRequired,
  content: PropTypes.node.isRequired
});

var SwipeableListItem =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(SwipeableListItem, _PureComponent);

  function SwipeableListItem(props) {
    var _this;

    _classCallCheck(this, SwipeableListItem);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwipeableListItem).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "handleDragStartMouse", function (event) {
      event.stopPropagation();
      window.addEventListener('mouseup', _this.handleDragEndMouse);
      window.addEventListener('mousemove', _this.handleMouseMove);

      _this.wrapper.addEventListener('mouseup', _this.handleDragEndMouse);

      _this.wrapper.addEventListener('mousemove', _this.handleMouseMove);

      _this.handleDragStart(event);
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragStartTouch", function (event) {
      // do not stop propagation here as it can be handled by parent to start scrolling
      window.addEventListener('touchend', _this.handleDragEndTouch);

      _this.wrapper.addEventListener('touchend', _this.handleDragEndTouch);

      _this.wrapper.addEventListener('touchmove', _this.handleTouchMove);

      var touch = event.targetTouches[0];

      _this.handleDragStart(touch);
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragStart", function (_ref) {
      var clientX = _ref.clientX;
      _this.dragged = true;
      _this.dragStartX = clientX;
      _this.listElement.className = styles$1.content;

      if (_this.contentLeft) {
        _this.contentLeft.className = styles$1.contentLeft;
      }

      if (_this.contentRight) {
        _this.contentRight.className = styles$1.contentRight;
      }

      _this.startTime = Date.now();
      requestAnimationFrame(_this.updatePosition);
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragEndMouse", function () {
      window.removeEventListener('mouseup', _this.handleDragEndMouse);
      window.removeEventListener('mousemove', _this.handleMouseMove);

      _this.wrapper.removeEventListener('mouseup', _this.handleDragEndMouse);

      _this.wrapper.removeEventListener('mousemove', _this.handleMouseMove);

      _this.handleDragEnd();
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragEndTouch", function () {
      window.removeEventListener('touchend', _this.handleDragEndTouch);

      _this.wrapper.removeEventListener('touchend', _this.handleDragEndTouch);

      _this.wrapper.removeEventListener('touchmove', _this.handleTouchMove);

      _this.handleDragEnd();
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragEnd", function () {
      if (_this.dragged && _this.left !== 0) {
        var threshold = _this.props.threshold || 0.5;

        if (_this.left < _this.listElement.offsetWidth * threshold * -1) {
          _this.handleSwipedLeft();
        } else if (_this.left > _this.listElement.offsetWidth * threshold) {
          _this.handleSwipedRight();
        }
      }

      _this.left = 0;
      _this.listElement.className = styles$1.contentReturn;
      _this.listElement.style.transform = "translateX(".concat(_this.left, "px)"); // hide backgrounds

      if (_this.contentLeft) {
        _this.contentLeft.style.opacity = 0;
        _this.contentLeft.className = styles$1.contentLeftReturn;
      }

      if (_this.contentRight) {
        _this.contentRight.style.opacity = 0;
        _this.contentRight.className = styles$1.contentRightReturn;
      }

      _this.dragged = false;
    });

    _defineProperty(_assertThisInitialized(_this), "shouldMoveItem", function (delta) {
      var _this$props = _this.props,
          _this$props$swipeLeft = _this$props.swipeLeft;
      _this$props$swipeLeft = _this$props$swipeLeft === void 0 ? {} : _this$props$swipeLeft;
      var contentLeft = _this$props$swipeLeft.content,
          _this$props$swipeRigh = _this$props.swipeRight;
      _this$props$swipeRigh = _this$props$swipeRigh === void 0 ? {} : _this$props$swipeRigh;
      var contentRight = _this$props$swipeRigh.content,
          blockSwipe = _this$props.blockSwipe;
      var swipingLeft = delta < 0;
      var swipingRight = delta > 0;
      return !blockSwipe && (swipingLeft && contentLeft || swipingRight && contentRight);
    });

    _defineProperty(_assertThisInitialized(_this), "handleMouseMove", function (event) {
      if (_this.dragged) {
        event.stopPropagation();
        var delta = event.clientX - _this.dragStartX;

        if (_this.shouldMoveItem(delta)) {
          _this.left = delta;
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleTouchMove", function (event) {
      if (_this.dragged) {
        event.stopPropagation();
        var touch = event.targetTouches[0];
        var delta = touch.clientX - _this.dragStartX;

        if (_this.shouldMoveItem(delta)) {
          _this.left = delta;
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "updatePosition", function () {
      var blockSwipe = _this.props.blockSwipe;

      if (blockSwipe) {
        _this.dragged = false;
      }

      if (_this.dragged) {
        requestAnimationFrame(_this.updatePosition);
      }

      var now = Date.now();
      var elapsed = now - _this.startTime;

      if (_this.dragged && elapsed > _this.fpsInterval) {
        var contentToShow = _this.left < 0 ? _this.contentLeft : _this.contentRight;
        var contentToHide = _this.left < 0 ? _this.contentRight : _this.contentLeft;

        if (!contentToShow) {
          return;
        }

        var opacity = (Math.abs(_this.left) / 100).toFixed(2);
        _this.listElement.style.transform = "translateX(".concat(_this.left, "px)");

        if (opacity < 1 && opacity.toString() !== contentToShow.style.opacity) {
          contentToShow.style.opacity = opacity.toString();

          if (contentToHide) {
            contentToHide.style.opacity = '0';
          }
        }

        if (opacity >= 1) {
          contentToShow.style.opacity = '1';
        }

        _this.startTime = Date.now();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleSwipedLeft", function () {
      var _this$props$swipeLeft2 = _this.props.swipeLeft;
      _this$props$swipeLeft2 = _this$props$swipeLeft2 === void 0 ? {} : _this$props$swipeLeft2;
      var action = _this$props$swipeLeft2.action;

      if (action) {
        action();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleSwipedRight", function () {
      var _this$props$swipeRigh2 = _this.props.swipeRight;
      _this$props$swipeRigh2 = _this$props$swipeRigh2 === void 0 ? {} : _this$props$swipeRigh2;
      var action = _this$props$swipeRigh2.action;

      if (action) {
        action();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "bindContentLeft", function (ref) {
      return _this.contentLeft = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "bindContentRight", function (ref) {
      return _this.contentRight = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "bindListElement", function (ref) {
      return _this.listElement = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "bindWrapper", function (ref) {
      return _this.wrapper = ref;
    });

    _this.contentLeft = null;
    _this.contentRight = null;
    _this.listElement = null;
    _this.wrapper = null;
    _this.dragged = false;
    _this.dragStartX = 0;
    _this.left = 0;
    _this.fpsInterval = 1000 / 60;
    _this.startTime = null;
    return _this;
  }

  _createClass(SwipeableListItem, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.wrapper.addEventListener('mousedown', this.handleDragStartMouse);
      this.wrapper.addEventListener('touchstart', this.handleDragStartTouch);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.wrapper.removeEventListener('mousedown', this.handleDragStartMouse);
      this.wrapper.removeEventListener('touchstart', this.handleDragStartTouch);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          swipeLeft = _this$props2.swipeLeft,
          swipeRight = _this$props2.swipeRight;
      return React.createElement("div", {
        className: styles$1.swipeableListItem,
        ref: this.bindWrapper
      }, swipeLeft && React.createElement("div", {
        ref: this.bindContentLeft,
        className: styles$1.contentLeft,
        "data-testid": "swipe-left-content"
      }, swipeLeft.content), swipeRight && React.createElement("div", {
        ref: this.bindContentRight,
        className: styles$1.contentRight,
        "data-testid": "swipe-right-content"
      }, swipeRight.content), React.createElement("div", {
        ref: this.bindListElement,
        className: styles$1.content,
        "data-testid": "content"
      }, children));
    }
  }]);

  return SwipeableListItem;
}(PureComponent);

SwipeableListItem.propTypes = {
  blockSwipe: PropTypes.bool,
  children: PropTypes.node.isRequired,
  swipeLeft: SwipeActionPropType,
  swipeRight: SwipeActionPropType,
  threshold: PropTypes.number
};

export { SwipeableList, SwipeableListItem };
